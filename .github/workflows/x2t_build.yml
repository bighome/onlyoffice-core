# Build x2t converter from pre-compiled artifacts
name: X2T

on:
  push:
    path-ignore:
      - 'README.md'

  pull_request:
    branches:
      - 'as_master'

jobs:

  build:
    name: ${{ matrix.osname }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false

      matrix:
        name:
          - ubuntu-16.04
          - macOS-latest

        include:
          - name: ubuntu-16.04
            os: ubuntu-16.04
            osname: Linux
            build_target: linux_64

          - name: macOS-latest
            os: macOS-latest
            osname: macOS
            build_target: mac_64
    env:
      JFROG_DIR: ${{ github.workspace }}/.artifactory
      ZIP_EXCLUDES: -x ".*" -x "__MACOSX" -x "*.DS_Store"
      X2T_BUILD_DIR: ${{ github.workspace }}/X2tConverter/build

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Get SDKJS version
        id: sdkjs-version-tag
        run: echo "::set-output name=sdkjs_tag::$(cat ./X2tConverter/SDKJS_VERSION | head -n 1)"

      - name: Get SDKJS sources
        uses: actions/checkout@v2
        with:
          fetch_depth: 0
          repository: airslateinc/onlyoffice-sdkjs
          ref: ${{ steps.sdkjs-version-tag.outputs.sdkjs_tag }}
          path: $JFROG_PATH/onlyoffice-sdkjs

      - name: Get Core fonts sources
        uses: actions/checkout@v2
        with:
          repository: airslateinc/onlyoffice-core-fonts
          path: $JFROG_PATH/onlyoffice-core-fonts

      # External projects used for Core converter assembly
      # git clone -b ${{ steps.sdkjs-version-tag.outputs.sdkjs_tag }} https://${{ secrets.GITHUB_TOKEN }}@github.com/airslateinc/onlyoffice-sdkjs.git
      # git clone --depth 1 https://${{ secrets.GITHUB_TOKEN }}@github.com/airslateinc/onlyoffice-core-fonts.git
      - name: Creates aliases for external projects
        run: |
          cd $GITHUB_WORKSPACE/..
          ln -sfv $JFROG_DIR/onlyoffice-sdkjs .
          ln -sfv $JFROG_DIR/onlyoffice-core-fonts .

      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v1
        env:
          JF_ARTIFACTORY_SERVER: ${{ secrets.JF_ARTIFACTORY_SERVER }}

      # Converter builds only from compiled artifacts (not support CI compilations!!!)
      - name: Fetch build artifacts
        run: |
          jfrog rt dl --flat --recursive \
            onlyoffice-core/core/${{ matrix.build_target }}/* $JFROG_DIR/

          zip -F $JFROG_DIR/common_3dparty.zip --out $JFROG_DIR/common_builds.zip
          unzip -u $JFROG_DIR/common_builds.zip -d ${{ github.workspace }}/
          unzip -u $JFROG_DIR/core_builds.zip -d ${{ github.workspace }}/

      - name: Assemble X2T converter
        working-directory: X2tConverter
        run: |
          #set number of cores for build
          export MAKEFLAGS="-j$(getconf _NPROCESSORS_ONLN)"

          make -f x2tConverter.mk
          make -f x2tConverter.mk build

      - name: Store X2T Converter build for ${{ matrix.osname }}
        working-directory: X2tConverter/build/${{ matrix.build_target }}_${{ steps.sdkjs-version-tag.outputs.sdkjs_tag }}
        run: |
          zip -rv $X2T_BUILD_DIR/x2t_${{ matrix.build_target }}_${{ steps.sdkjs-version-tag.outputs.sdkjs_tag }}.zip . $ZIP_EXCLUDES

      - name: Save convereter build as workflow artifacts
        uses: actions/upload-artifact@v2
        with:
          name: x2t_converters_${{ steps.sdkjs-version-tag.outputs.sdkjs_tag }}.zip
          path: X2tConverter/build/x2t_${{ matrix.build_target }}_${{ steps.sdkjs-version-tag.outputs.sdkjs_tag }}.zip

      - name: Run Convertion Tests (docx -> pdf)
        working-directory: X2tConverter/build/${{ matrix.build_target }}_${{ steps.sdkjs-version-tag.outputs.sdkjs_tag }}
        run: |
          jfrog rt dl --flat \
            onlyoffice-core/core/test_documents/sample_fillable_fields.docx \
            $X2T_BUILD_DIR/${{ matrix.build_target }}_${{ steps.sdkjs-version-tag.outputs.sdkjs_tag }}/source/input.docx

          ./x2t ./params.xml

      - name: Store converter run result for failed test
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: 'output_${{ matrix.build_target }}_${{ steps.sdkjs-version-tag.outputs.sdkjs_tag }}'
          path: $X2T_BUILD_DIR/${{ matrix.build_target }}_${{ steps.sdkjs-version-tag.outputs.sdkjs_tag }}/result

      - name: Store converter builds to Artifactory for 'converter/*' branches
        if: startsWith(github.ref, 'refs/heads/converter/')
        run: |
          jfrog rt u \
            $X2T_BUILD_DIR/x2t_${{ matrix.build_target }}_${{ steps.sdkjs-version-tag.outputs.sdkjs_tag }}.zip \
            onlyoffice-core/converter-dev/${{ steps.sdkjs-version-tag.outputs.sdkjs_tag }}/
          echo "::warning file=Download_URL::https://artifactory.infrateam.xyz/onlyoffice-core/converter-dev/${{ steps.sdkjs-version-tag.outputs.sdkjs_tag }}/x2t_${{ matrix.build_target }}_${{ steps.sdkjs-version-tag.outputs.sdkjs_tag }}.zip"

